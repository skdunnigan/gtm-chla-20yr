---
title: "Alternative stations"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false
if(!require(here)){ install.packages("here") } ;  library(here) # easy paths
if(!require(dplyr)){ install.packages("dplyr") } ;  library(dplyr) # left_join
if(!require(tidyr)){ install.packages("tidyr") } ;  library(tidyr) # pipe operator %>% 
if(!require(ggplot2)){install.packages("ggplot2")} ; library(ggplot2) # plotting
if(!require(lubridate)){ install.packages("lubridate") } ;  library(tidyr) # pipe operator %>% 
if(!require(janitor)){ install.packages("janitor") } ;  library(janitor) # clean names
if(!require(readxl)){ install.packages("readxl") } ;  library(readxl) # clean names
if(!require(wqtrends)){ 
  options(repos = c(
  tbeptech = 'https://tbep-tech.r-universe.dev',
  CRAN = 'https://cloud.r-project.org'))
  install.packages('wqtrends')} ; library(wqtrends) # models and plots for trends

if(!require(mgcv)){ install.packages("mgcv") } ;  library(mgcv)
```


# Data

## SJRWMD (21FLSJWM)

Stations:

-   NAME: TOL, ID in WIN: 44803

-   NAME: NCB27010127, ID in WIN: 448974

-   NAME: JXTR17, ID in WIN: 44869

-   NAME: MR312, ID in WIN: 44732

-   NAME: JXTR21, ID in WIN: 44872

-   NAME: NCBMOSES, ID in WIN: 242782 *may not use this station*

-   NAME: MRT, ID in WIN: 44873

-   NAME: PELFAV, ID in WIN: 472127

## DEP NE-ROC (21FLA)

Stations:

-   NAME: Moses CR at US 1, ID in WIN: 27010050 *may not use this station*

-   NAME: Pellicer Creek \@ Styles Creek, ID in WIN: G5NE0592

-   NAME: PELLICER CR. AT FAVER DYKES BT.RMP., ID in WIN: 27010965

-   NAME: Pellicer 1.3 mi downstream of I95, ID in WIN: G5NE0593

-   NAME: San Sebastian at Marina North of SR312, ID in WIN: G5NE0604

-   NAME: St Augustine Inlet SE of Vilano Bt.Rmp, ID in WIN: G5NE0587

-   NAME: DEEP CREEK 270M ABOVE ICW, ID in WIN: 27010165

-   NAME: ICW Tolomato River \@ CM 5, ID in WIN: 27010145

Make a table of the stations in WIN

```{r}
win_sites <- tribble(
~station_name, ~station_id, ~organization, ~org_id,
"Moses CR at US 1", "27010050", "FDEP NORTHEAST REGIONAL OPERATIONS CENTER", "21FLA",
"Pellicer Creek @ Styles Creek", "G5NE0592", "FDEP NORTHEAST REGIONAL OPERATIONS CENTER", "21FLA",
"PELLICER CR. AT FAVER DYKES BT.RMP.", "27010965", "FDEP NORTHEAST REGIONAL OPERATIONS CENTER", "21FLA",
"Pellicer 1.3 mi downstream of I95", "G5NE0593", "FDEP NORTHEAST REGIONAL OPERATIONS CENTER", "21FLA",
"San Sebastian at Marina North of SR312", "G5NE0604", "FDEP NORTHEAST REGIONAL OPERATIONS CENTER", "21FLA",
"St Augustine Inlet SE of Vilano Bt.Rmp", "G5NE0587", "FDEP NORTHEAST REGIONAL OPERATIONS CENTER", "21FLA",
"DEEP CREEK 270M ABOVE ICW", "27010165", "FDEP NORTHEAST REGIONAL OPERATIONS CENTER", "21FLA",
"ICW Tolomato River @ CM 5", "27010145", "FDEP NORTHEAST REGIONAL OPERATIONS CENTER", "21FLA",
"TOL", "44803", "ST JOHNS RIVER WATER MANAGEMENT DISTRICT", "21FLSJWM",
"NCB27010127", "448974", "ST JOHNS RIVER WATER MANAGEMENT DISTRICT", "21FLSJWM",
"JXTR17", "44869", "ST JOHNS RIVER WATER MANAGEMENT DISTRICT", "21FLSJWM",
"MR312", "44732", "ST JOHNS RIVER WATER MANAGEMENT DISTRICT", "21FLSJWM",
"JXTR21", "44872", "ST JOHNS RIVER WATER MANAGEMENT DISTRICT", "21FLSJWM",
"NCBMOSES", "242782", "ST JOHNS RIVER WATER MANAGEMENT DISTRICT", "21FLSJWM",
"MRT", "44873", "ST JOHNS RIVER WATER MANAGEMENT DISTRICT", "21FLSJWM",
"PELFAV", "472127", "ST JOHNS RIVER WATER MANAGEMENT DISTRICT", "21FLSJWM"
) %>% 
  select(station_id, station_name, org_id, organization)

win_sites %>% arrange(station_id)
```

I gave up on getting the SJRWMD data through WIN and went to their data portal and downloaded the data directly.

# Data Preparation

## SJRWMD

```{r}
#| label: load-sjr-data

sjr <- read.csv(here('data', 'sjrwmd', 'Data2.csv')) %>% janitor::clean_names()

glimpse(sjr)

sjr_dat <- sjr %>% 
  mutate(datetime = as.POSIXct(sample_collection_date_and_time, format = 
                                 "%m/%d/%Y %H:%M", tz = "EST"),
         date = as.Date(datetime)) %>% 
  select(station, datetime, sample_collection_date_and_time, date, measured_value) %>% 
  rename(value = measured_value) %>% 
  mutate(doy = lubridate::yday(date), # day of the year
         cont_year = lubridate::decimal_date(date), # date in decimal time
         yr = lubridate::year(date), # year
         mo = lubridate::month(date, label = TRUE), # month
         param = "chla")

sjr %>% 
  select(station, point_location_description) %>% 
  unique()
```

```{r}
sjr_dat %>% 
  ggplot(aes(x = value, y = station, fill = station)) +
  ggdist::stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  ggdist::stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  scale_fill_brewer(palette = "Set2") +
  theme_classic() +
  theme(legend.position = "none") +
  labs(x = "Chlorophyll-a (\U00B5g/L)",
       y = "",
       title = "Identity") 

sjr_dat %>% 
  ggplot(aes(x = cont_year, y = value)) + 
  geom_line() +
  facet_wrap(~station, ncol = 1) +
  theme_bw() +
  theme(axis.title.x = element_blank()) +
  labs(x = "Chlorophyll-a (\U00B5g/L)")

sjr_dat %>% 
  filter(yr > 2002) %>% 
  ggplot(aes(x = cont_year, y = value)) + 
  geom_line() +
  facet_wrap(~station, ncol = 1) +
  theme_bw() +
  theme(axis.title.x = element_blank()) +
  labs(x = "Chlorophyll-a (\U00B5g/L)",
       title = "Collections since 2003")
```

After viewing the data, we'll ignore PELFAV. The TOL site collected until 2018 and the NCB27010127 started collections in 2015. The best sites to use will be JXTR14, JXTR21, MR312, and MRT.

```{r}
sites <- c('JXTR17', 'JXTR21', 'MR312', 'MRT')

sjr_dat2 <- sjr_dat %>% 
  filter(station %in% sites) %>% 
  filter(yr > 2002 & yr < 2023)

sjr_dat2 %>% 
  ggplot(aes(x = value, y = station, fill = station)) +
  ggdist::stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  ggdist::stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  scale_fill_brewer(palette = "Set2") +
  theme_classic() +
  theme(legend.position = "none") +
  labs(x = "Chlorophyll-a (\U00B5g/L)",
       y = "",
       title = "Identity") 

sjr_dat2 %>% 
  ggplot(aes(x = log10(value), y = station, fill = station)) +
  ggdist::stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  ggdist::stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  scale_fill_brewer(palette = "Set2") +
  theme_classic() +
  theme(legend.position = "none") +
  labs(x = "Chlorophyll-a (\U00B5g/L)",
       y = "",
       title = "Log-10 Transformation")
```

# Data Analysis

## JXTR17

```{r}
tomod <- sjr_dat2 %>%
          filter(station %in% "JXTR17") # only keep JXTR17 data

mod <- wqtrends::anlz_gam(tomod, trans = "log10")
mod
```

```{r}
anlz_smooth(mod)

anlz_fit(mod)
```

Using the basic smoother with just `cont_year` as a variable, the test statistics are okay. The AIC is low and there is a decent R2 value.

```{r}
par(mfrow=c(2,2)) 
gam.check(mod)
```

Estimate results by day of year

```{r}
ylab <- "Chlorophyll-a (\U00B5g/L)"
show_prddoy(mod, ylab = ylab) + labs(caption = "JXTR17")

```

Predictions for the model across the entire time series. Points are the observed data and the lines are the predicted. I have modified the `show_prdseries()` function from the `wqtrends` package to `show_prdseries_mod()` for basic aesthetic changes.

```{r}
#| label: fxn-mod1

show_prdseries_mod <-  function (mod, ylab, alpha = 0.7, base_size = 11, xlim = NULL, 
    ylim = NULL, site) 
{
    prds <- anlz_prd(mod)
    trans <- unique(prds$trans)
    tobacktrans <- mod$model %>% dplyr::mutate(trans = mod$trans)
    moddat <- anlz_backtrans(tobacktrans) %>% dplyr::mutate(date = lubridate::date_decimal(cont_year), 
        date = as.Date(date))
    p <- ggplot2::ggplot(prds, ggplot2::aes(x = date)) + 
          ggplot2::geom_point(data = moddat, 
                    ggplot2::aes(y = value), color = "gray75", size = 1) + 
      ggplot2::geom_line(ggplot2::aes(y = value), 
        linewidth = 0.75, alpha = alpha, colour = "#56B4E9") + 
      ggplot2::theme_bw(base_family = "serif", 
        base_size = base_size) + 
      ggplot2::theme(legend.position = "top", 
        legend.title = ggplot2::element_blank(), 
        axis.title.x = ggplot2::element_blank(),
        axis.text = element_text(size = 12, color = "black")) +
      ggplot2::labs(y = ylab,
                    title = site) + 
      ggplot2::coord_cartesian(xlim = xlim, ylim = ylim)
    if (trans != "ident") 
        p <- p + ggplot2::scale_y_log10()
    return(p)
}
```

```{r}
show_prdseries_mod(mod, ylab = "Chlorophyll-a (\U00B5g/L)", site = "JXTR17")
```

```{r}
show_prdseason(mod, ylab = ylab) + labs(caption = "JXTR17")
```

```{r}
#| echo: false

# first 10 years
show_metseason(mod, doystr = 1, doyend = 365, yrstr = 2003, yrend = 2012, ylab = "Chlorophyll-a (ug/L)") + geom_hline(yintercept = 6.6, linetype = "dashed", linewidth = 1, color = "gray75") 

# last 10 years
show_metseason(mod, doystr = 1, doyend = 365, yrstr = 2013, yrend = 2022, ylab = "Chlorophyll-a (ug/L)") + geom_hline(yintercept = 6.6, linetype = "dashed", linewidth = 1, color = "gray75") 

# last 5 years
show_metseason(mod, doystr = 1, doyend = 365, yrstr = 2018, yrend = 2022, ylab = "Chlorophyll-a (ug/L)") + geom_hline(yintercept = 6.6, linetype = "dashed", linewidth = 1, color = "gray75") 

# record
show_metseason(mod, doystr = 1, doyend = 365, yrstr = 2003, yrend = 2022, ylab = "Chlorophyll-a (ug/L)") + geom_hline(yintercept = 6.6, linetype = "dashed", linewidth = 1, color = "gray75") 

```

## JXTR21

```{r}
tomod <- sjr_dat2 %>%
          filter(station %in% "JXTR21") # only keep JXTR21 data

mod <- wqtrends::anlz_gam(tomod, trans = "log10")
mod
```

```{r}
anlz_smooth(mod)

anlz_fit(mod)
```


```{r}
par(mfrow=c(2,2)) 
gam.check(mod)
```

Estimate results by day of year

```{r}
ylab <- "Chlorophyll-a (\U00B5g/L)"
show_prddoy(mod, ylab = ylab) + labs(caption = "JXTR21")

```

Predictions for the model across the entire time series. Points are the observed data and the lines are the predicted. I have modified the `show_prdseries()` function from the `wqtrends` package to `show_prdseries_mod()` for basic aesthetic changes.

```{r}
show_prdseries_mod(mod, ylab = "Chlorophyll-a (\U00B5g/L)", site = "JXTR21")
```

```{r}
show_prdseason(mod, ylab = ylab) + labs(caption = "JXTR21")
```

```{r}
#| echo: false

# first 10 years
show_metseason(mod, doystr = 1, doyend = 365, yrstr = 2003, yrend = 2012, ylab = "Chlorophyll-a (ug/L)") + geom_hline(yintercept = 5.5, linetype = "dashed", linewidth = 1, color = "gray75") 

# last 10 years
show_metseason(mod, doystr = 1, doyend = 365, yrstr = 2013, yrend = 2022, ylab = "Chlorophyll-a (ug/L)") + geom_hline(yintercept = 5.5, linetype = "dashed", linewidth = 1, color = "gray75") 

# last 5 years
show_metseason(mod, doystr = 1, doyend = 365, yrstr = 2018, yrend = 2022, ylab = "Chlorophyll-a (ug/L)") + geom_hline(yintercept = 5.5, linetype = "dashed", linewidth = 1, color = "gray75") 

# record
show_metseason(mod, doystr = 1, doyend = 365, yrstr = 2003, yrend = 2022, ylab = "Chlorophyll-a (ug/L)") + geom_hline(yintercept = 5.5, linetype = "dashed", linewidth = 1, color = "gray75") 

```